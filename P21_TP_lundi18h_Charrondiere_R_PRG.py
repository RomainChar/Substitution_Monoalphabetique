#Charrondiere Romain
#Projet NF04 Sujet Q1
from math import log, exp
from random import *

alphabet = list("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
alphabet2 = list("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
alphabetmax = list("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
letter_correspondance = {alphabet[i] : i for i in range(26)}
def convertir_lettre_en_indice(lettre):
    return(letter_correspondance[lettre])
def proba_paire(lettre1, lettre2) :
    k = lettre1 + lettre2
    return(proba[k])
	
proba = {'ES': 0.17745477852586555,
 'LE': 0.3958669626945685,
 'EN': 0.12631328583221088,
 'RE': 0.3213604320179466,
 'DE': 0.528495558419197,
 'NT': 0.24150677794025918,
 'TE': 0.22266790802033928,
 'AI': 0.19701669532532914,
 'ET': 0.0899769015089708,
 'ER': 0.0877455906157398,
 'ON': 0.2750910631584594,
 'OU': 0.26992124059457223,
 'SE': 0.1742354852483254,
 'IT': 0.17903011673496147,
 'EL': 0.07511879677307058,
 'AN': 0.15180660975484636,
 'LA': 0.21302336704584002,
 'QU': 0.9927786795570235,
 'NE': 0.1566053665309972,
 'UR': 0.16468922525325308,
 'ME': 0.3634684253413376,
 'IE': 0.13658190098209483,
 'IS': 0.1319600247698044,
 'EM': 0.05387053233902408,
 'EC': 0.05308268946242293,
 'ED': 0.052314515340022655,
 'UE': 0.13993572985895913,
 'EU': 0.050679823324217776,
 'CE': 0.2773295972711921,
 'IL': 0.11832185067093948,
 'IN': 0.11664648553099506,
 'TA': 0.11799393629523262,
 'SA': 0.10311729321228141,
 'NS': 0.11553845882132732,
 'RA': 0.12054951144606106,
 'AR': 0.09536890410934439,
 'SS': 0.08959865050488831,
 'US': 0.1122172357081955,
 'EP': 0.041108242634082255,
 'CO': 0.2227420018193613,
 'UI': 0.10913905769231261,
 'TR': 0.09553870260380509,
 'TI': 0.09420170556732535,
 'EE': 0.03878951505551412,
 'UN': 0.10560667343799511,
 'ND': 0.09107846147548657,
 'AU': 0.07884631462504918,
 'PA': 0.22435492682034852,
 'SI': 0.07260405217820523,
 'SD': 0.07250950805289882,
 'LL': 0.10262023961227663,
 'SO': 0.07042837008473427,
 'RI': 0.08421209283466707,
 'ST': 0.06817565203730994,
 'VE': 0.3349022231037596,
 'MA': 0.18685388259307167,
 'OI': 0.10125150575175924,
 'EA': 0.029392767736052913,
 'UT': 0.07855385203667495,
 'AL': 0.06061236118372685,
 'IR': 0.06752930272378022,
 'PE': 0.17394140633016555,
 'OR': 0.09208510263987572,
 'AS': 0.059607459459641444,
 'RO': 0.07268771522111453,
 'NC': 0.06716691251530542,
 'TD': 0.06425876209482523,
 'CH': 0.14469422748454122,
 'PO': 0.16247900663871787,
 'DA': 0.12181786960593638,
 'AV': 0.05498631046396331,
 'SL': 0.05400803977843085,
 'SP': 0.05390649238458323,
 'NA': 0.06034400108981258,
 'AT': 0.052519521544978715,
 'PR': 0.14780998536396112,
 'DI': 0.11087504659181996,
 'TO': 0.056910542162046794,
 'TL': 0.05680921463073878,
 'RS': 0.061425190240201655,
 'TS': 0.05426155098642304,
 'EV': 0.022306006326626125,
 'OM': 0.07283817533624282,
 'AC': 0.04618001391669978,
 'LI': 0.06606354296532718,
 'VA': 0.22237790329777565,
 'AP': 0.04453043626057351,
 'SC': 0.044565299362025204,
 'SU': 0.04455829609348399,
 'LU': 0.06280912366395668,
 'DU': 0.09509506787383788,
 'RT': 0.052960052673554414,
 'MO': 0.11975359830132656,
 'RD': 0.05141898554047817,
 'VO': 0.20398979687424718,
 'NO': 0.04678224696947546,
 'HE': 0.3861582774329536,
 'GE': 0.3327148436558766,
 'TT': 0.044503841315657974,
 'IO': 0.0426457762658779,
 'PL': 0.11006346844043718,
 'RL': 0.04578986938307616,
 'EQ': 0.017153339080283974,
 'TP': 0.04085868207249961,
 'EF': 0.016849566098737348,
 'AM': 0.0357288028303591,
 'LO': 0.05112727788027886,
 'VI': 0.16590428596426732,
 'EI': 0.01523235741999991,
 'UX': 0.041232991245169694,
 'TU': 0.03608970839119784,
 'SQ': 0.03147619045849333,
 'NI': 0.03563313197632218,
 'NN': 0.035452984696360997,
 'MI': 0.0878007666873385,
 'MM': 0.0852649327652172,
 'CA': 0.07691669088391741,
 'FA': 0.21593796932045625,
 'UL': 0.036927711785122545,
 'HA': 0.2747941960926197,
 'UV': 0.03537000776740918,
 'AB': 0.027337523700467267,
 'DO': 0.05956400683475276,
 'BL': 0.22780113986412867,
 'RC': 0.031691322992918054,
 'MP': 0.07317834053327871,
 'SM': 0.025662310357860877,
 'JE': 0.45491271528544724,
 'TC': 0.02826774935100532,
 'AG': 0.024854413871810754,
 'IM': 0.02752719805964549,
 'AD': 0.023991737217723515,
 'EG': 0.010843493461791184,
 'FO': 0.1672278605073327,
 'ID': 0.025586685915396434,
 'RR': 0.028138426343495285,
 'CI': 0.059024458801905016,
 'IV': 0.024594984129688448,
 'IC': 0.024331136865601,
 'NG': 0.02444665310288066,
 'RM': 0.02587476041542971,
 'FI': 0.14933694802267972,
 'UA': 0.026047610873637064,
 'UC': 0.02586146077591798,
 'UP': 0.025818273953247144,
 'OL': 0.030743619388796592,
 'GR': 0.16692552889729892,
 'OT': 0.030630253979285666,
 'RU': 0.024129076197831733,
 'EB': 0.009209347800269675,
 'UD': 0.024256102333188527,
 'OS': 0.029109717931083554,
 'LS': 0.02680846684633323,
 'FE': 0.13491563402367066,
 'EJ': 0.00868484768824672,
 'CR': 0.04786141919712958,
 'TQ': 0.020569488855526473,
 'IA': 0.019873027920675173,
 'BO': 0.14959826328180062,
 'BR': 0.1487069228798728,
 'CU': 0.04455262307542229,
 'MB': 0.04805504597064346,
 'UM': 0.02143108845020359,
 'NP': 0.018988857732204795,
 'BI': 0.1393037713870077,
 'CT': 0.04212758015668697,
 'IG': 0.017887024868824836,
 'BE': 0.1347882996805381,
 'IQ': 0.01770766071885406,
 'HO': 0.15171581612288995,
 'SR': 0.015429367807721412,
 'FF': 0.10891485319604549,
 'SF': 0.014930968529871571,
 'PI': 0.04277531394623724,
 'DR': 0.03176628161290634,
 'NF': 0.016586893999389007,
 'EZ': 0.006790637387847162,
 'AF': 0.014362400511290266,
 'SN': 0.014230641675750015,
 'EO': 0.006511450349051612,
 'GA': 0.11649133406733811,
 'BA': 0.11598199669480792,
 'PP': 0.03939224334458735,
 'NU': 0.015145715759699538,
 'CL': 0.03381788707072201,
 'TM': 0.014484573209185586,
 'EX': 0.005945973665776866,
 'IF': 0.01391631850534134,
 'JO': 0.22602063571571115,
 'SV': 0.012485660597563805,
 'PU': 0.036138116256340364,
 'RN': 0.015130217144984446,
 'GN': 0.09746954219322977,
 'VR': 0.05713985307349124,
 'FR': 0.08198092852142562,
 'NL': 0.01279979784731612,
 'NV': 0.012679699660675331,
 'JA': 0.198573010640473,
 'YA': 0.30437455663790886,
 'OC': 0.016072695837326963,
 'RP': 0.012762096341603583,
 'SB': 0.010062529682303221,
 'NQ': 0.01146537355130735,
 'NM': 0.011385308093546825,
 'IP': 0.01069036328630172,
 'RQ': 0.01165601937422388,
 'GU': 0.07864364930855611,
 'IB': 0.0104122188798253,
 'GI': 0.07459833517672976,
 'RV': 0.010897648361660824,
 'OP': 0.013611046945089694,
 'YE': 0.24943783342756612,
 'EH': 0.0039747274114239365,
 'RG': 0.010292382440313328,
 'HI': 0.0786691161771826,
 'SJ': 0.00806893257090386,
 'UB': 0.010244212177677056,
 'NR': 0.00912212448751595,
 'TH': 0.008703640156768734,
 'SG': 0.0076300610756543505,
 'FU': 0.0554032951338401,
 'OY': 0.0116298514550654,
 'LQ': 0.010730065895642312,
 'TV': 0.008429924228040599,
 'AQ': 0.007380548509495022,
 'CC': 0.0184592819187316,
 'TF': 0.007915390919710302,
 'TN': 0.007854857589318504,
 'OB': 0.010722928178977985,
 'JU': 0.12427440091757833,
 'LN': 0.009574571715781672,
 'UF': 0.008440790030974496,
 'OD': 0.010193889601260327,
 'FL': 0.04694561862971537,
 'TB': 0.0072797909505964075,
 'TJ': 0.007267947472911055,
 'PS': 0.018506787423669513,
 'UO': 0.008075935839445075,
 'SH': 0.006327453126988257,
 'MU': 0.01736682082956707,
 'XP': 0.11795269274827959,
 'XE': 0.11783682566306516,
 'RB': 0.007110085964954389,
 'AY': 0.0057845966994336286,
 'DS': 0.012560302672860327,
 'UG': 0.007300062232151901,
 'LD': 0.008163599776500975,
 'UJ': 0.007237515799318287,
 'PT': 0.016443691209223038,
 'LH': 0.007979922956002897,
 'PH': 0.016029714666192664,
 'AE': 0.005443023375585572,
 'OE': 0.008144314975340555,
 'LT': 0.007198461574247434,
 'OF': 0.007735839610912295,
 'GO': 0.04140325141702163,
 'IX': 0.0054680070936743265,
 'GL': 0.04095268374132184,
 'OG': 0.00734715820687483,
 'XD': 0.09255462766927872,
 'SY': 0.00463032771716702,
 'RF': 0.005378710634385903,
 'XA': 0.08657588607221464,
 'XC': 0.08581116330979946,
 'HU': 0.04112300062743035,
 'NB': 0.004810599587111615,
 'LP': 0.005997883083900901,
 'AA': 0.004123361250684552,
 'AJ': 0.00408489053502931,
 'UU': 0.004999247024343927,
 'BU': 0.03260738679140407,
 'XI': 0.0766344901608174,
 'LY': 0.005411787047584304,
 'LF': 0.005410117258307049,
 'NJ': 0.0042181151996837215,
 'NH': 0.0041980988352435895,
 'LC': 0.005149630131055228,
 'BS': 0.030109674676111777,
 'YS': 0.10118672551775297,
 'LM': 0.004864096164644578,
 'AH': 0.0032245454394666294,
 'XT': 0.06358785636567371,
 'TG': 0.003564886783290974,
 'DD': 0.006724639841077116,
 'VU': 0.01516120810030686,
 'UQ': 0.0037959727926877183,
 'DM': 0.006266141670094586,
 'CS': 0.00732037209424209,
 'XQ': 0.05410992879513415,
 'YR': 0.07743397304879689,
 'IJ': 0.00288542328213858,
 'DH': 0.00550961968797341,
 'ZE': 0.1329520731529036,
 'XM': 0.04852513528779911,
 'GT': 0.020344110052792505,
 'II': 0.0026293744593542108,
 'NY': 0.0026848616835696447,
 'RJ': 0.002821712522215749,
 'ZV': 0.12440108226407944,
 'ZL': 0.12212081802705964,
 'LV': 0.0031742694160622528,
 'LR': 0.0031542319447351893,
 'XS': 0.043450156955407514,
 'CY': 0.00554080079815522,
 'OQ': 0.0032318138965337245,
 'CD': 0.005257275879795617,
 'PD': 0.005592076581262809,
 'DL': 0.004029689480524242,
 'YP': 0.05191673039643262,
 'XL': 0.035316287573355226,
 'CQ': 0.004536398693753648,
 'OV': 0.0025948082621389925,
 'LG': 0.0023059789918895165,
 'IU': 0.001793641499707766,
 'AO': 0.0015376628469473913,
 'YO': 0.04119405928187529,
 'FS': 0.010196717309887584,
 'ZD': 0.07600880790065952,
 'ZA': 0.07429860972289469,
 'XF': 0.026927510603831216,
 'DP': 0.0029343882942881963,
 'HY': 0.012686764259889493,
 'ZP': 0.07132159808011886,
 'MD': 0.0036647103809246562,
 'OH': 0.001954203725855025,
 'WA': 0.34298974565172613,
 'YL': 0.03661317130571947,
 'ZM': 0.06669772893282874,
 'UY': 0.0014385679551731409,
 'XH': 0.022246480361168646,
 'XV': 0.022246480361168646,
 'XO': 0.02215378669299711,
 'RH': 0.0013507589355840097,
 'DC': 0.00239692654941423,
 'FT': 0.007779026433583123,
 'TY': 0.0011922434203254422,
 'HT': 0.00997056715402769,
 'RY': 0.0012591820585952632,
 'HR': 0.009780545134276042,
 'SW': 0.0010084706699350404,
 'LB': 0.0014360187784395251,
 'ZO': 0.054409638322222106,
 'BT': 0.008364886848861242,
 'EY': 0.0004644011408536558,
 'XB': 0.019488843733065447,
 'IZ': 0.001072285679173121,
 'KE': 0.3919204157377757,
 'UH': 0.0012226338418189946,
 'YM': 0.0278585853957328,
 'XR': 0.01788987795710645,
 'DN': 0.0018874841372114178,
 'MY': 0.002446450742098754,
 'YC': 0.024838592581822663,
 'HB': 0.008148591317585411,
 'MS': 0.0023901724435660358,
 'CP': 0.0020480151017677707,
 'FD': 0.005760042473721854,
 'DJ': 0.0017244625653065181,
 'DQ': 0.00171936814118449,
 'NZ': 0.0008793856110697793,
 'WE': 0.20870751836056095,
 'ZC': 0.041488140979109994,
 'ML': 0.00208560753385956,
 'XN': 0.014552905902931157,
 'OO': 0.0010994645271615287,
 'BJ': 0.005965124228286295,
 'LJ': 0.0010169016698484544,
 'MN': 0.0019531880079002232,
 'DT': 0.0014926662677542388,
 'XJ': 0.01348692871895849,
 'GM': 0.00569086564307773,
 'CM': 0.0017494090707294654,
 'OW': 0.0010364837440999027,
 'BB': 0.005524351502058244,
 'EW': 0.00030541204439669836,
 'GS': 0.005445991906284368,
 'DV': 0.0013831361491306344,
 'AZ': 0.0006283550223689492,
 'ZS': 0.033190512783287995,
 'MT': 0.001704901396726466,
 'GD': 0.004995424230584582,
 'XG': 0.011818442691870842,
 'OJ': 0.0008871293156966181,
 'CK': 0.0014809652650485646,
 'YT': 0.01659299422474219,
 'KI': 0.22565114845508297,
 'PC': 0.001577861414009227,
 'HM': 0.005119416767426774,
 'MC': 0.0014864091788935596,
 'ZQ': 0.02831328094299567,
 'IK': 0.000560188033604382,
 'ZI': 0.027299830170986878,
 'YD': 0.01448917900606322,
 'IH': 0.0005445911509982275,
 'HN': 0.004538172942304084,
 'WI': 0.12858156669861573,
 'FC': 0.003418699730353324,
 'UZ': 0.0005912127103558353,
 'XU': 0.009153499731939184,
 'DY': 0.0009755822193683846,
 'HL': 0.004236373263874995,
 'DF': 0.0009602989470023003,
 'ZB': 0.023816093142206653,
 'YB': 0.012656823815600893,
 'ZU': 0.023372708429452806,
 'NK': 0.0004630452307150432,
 'GY': 0.0033008979719745184,
 'HC': 0.00369984050222328,
 'OK': 0.0005938188117239025,
 'OA': 0.0005452336362192197,
 'ZT': 0.01900220197516488,
 'DG': 0.0007488803459381334,
 'XY': 0.0066739441083505935,
 'ZR': 0.018242113896158287,
 'HS': 0.003085063379497357,
 'EK': 0.0001480620107898126,
 'YV': 0.008924248427622078,
 'YF': 0.008822450917040836,
 'KS': 0.11971387244353875,
 'CV': 0.0007480231888636335,
 'TZ': 0.0003250376653646624,
 'GG': 0.0023997626205749466,
 'CF': 0.0007329420761849312,
 'HD': 0.0026714860423908272,
 'CN': 0.0007148447409704885,
 'FQ': 0.0019680852045706482,
 'SX': 0.0002707930502603349,
 'YN': 0.0078044758112284325,
 'MG': 0.0007514808098192384,
 'PM': 0.0007634813293593034,
 'ZN': 0.014124970134872562,
 'WN': 0.07030814730811007,
 'AX': 0.00025530565843933186,
 'DB': 0.0005425561689959946,
 'KA': 0.101186725517753,
 'FM': 0.0017899395610534775,
 'CB': 0.0006092769522195724,
 'FP': 0.0016711757987086968,
 'GH': 0.0018806302985730193,
 'PY': 0.0006073918131347348,
 'ZF': 0.01133798051184838,
 'ZJ': 0.01121129916534728,
 'KL': 0.07838408314755513,
 'HP': 0.0018331536023100238,
 'JY': 0.0034626234710300446,
 'FN': 0.0013827495187285158,
 'YI': 0.005327403053751583,
 'QM': 0.0012092310347832198,
 'OX': 0.00027351654358191875,
 'WO': 0.04813891167041771,
 'PQ': 0.0005089875529062022,
 'BD': 0.0014398575723449678,
 'NX': 0.00019215709862526286,
 'SZ': 0.00016691123356563748,
 'AK': 0.00016320909671920758,
 'GC': 0.0013712929260428265,
 'HQ': 0.0015648872214841668,
 'MF': 0.00046346834085768005,
 'SK': 0.0001634095992950297,
 'TW': 0.00018159999117539844,
 'FH': 0.0011621882458024949,
 'CJ': 0.0004102062648607022,
 'PF': 0.0004614820479682901,
 'BC': 0.0013223181786841541,
 'HV': 0.0015089983921454464,
 'QA': 0.001060040192829446,
 'YG': 0.004580887976155819,
 'MR': 0.0004336739475168292,
 'MW': 0.0004336739475168292,
 'RK': 0.00018744642008634033,
 'HJ': 0.0014419317969389823,
 'YQ': 0.004343360451466259,
 'PN': 0.0004275495444412099,
 'MV': 0.00041381101862292865,
 'PV': 0.0004139765430303778,
 'JI': 0.002554740487772167,
 'CG': 0.00035893048175311443,
 'AW': 0.00013523039442448628,
 'RW': 0.0001659830895421029,
 'RZ': 0.0001545359799185096,
 'QH': 0.0008401800046870424,
 'ZG': 0.006587430018057159,
 'FJ': 0.0008737619658223136,
 'BY': 0.0009990848461169165,
 'GP': 0.0009794949471734476,
 'QC': 0.000777362808074927,
 'PB': 0.00033253853456538545,
 'PG': 0.0003155722828018454,
 'PJ': 0.0003087857820964294,
 'MQ': 0.0002880124689615583,
 'NW': 0.00011609491375276298,
 'YJ': 0.002918195303328892,
 'MJ': 0.00027808100451460804,
 'FV': 0.0006871331964233728,
 'KR': 0.038004403950329765,
 'DW': 0.00020122975282011067,
 'OZ': 0.00014035717368019514,
 'BN': 0.0007248262609083512,
 'GQ': 0.0007248262609083512,
 'GF': 0.0007150313114366166,
 'IY': 9.358129563692692e-05,
 'MH': 0.00023173417042884003,
 'UW': 0.0001012656531591859,
 'HF': 0.0007489103131388512,
 'BP': 0.0006464666651344753,
 'KO': 0.03135363325902205,
 'BH': 0.0005779020188323341,
 'BM': 0.0005681070693605996,
 'QO': 0.00045542467543783604,
 'QP': 0.00045542467543783604,
 'KD': 0.027078137814609955,
 'XX': 0.0013208847714443882,
 'VT': 0.0003244278386003761,
 'ZZ': 0.003547077702030778,
 'LZ': 9.18384102490394e-05,
 'BQ': 0.0005289272714736617,
 'WS': 0.017101981777648396,
 'VL': 0.0003070477758182131,
 'VY': 0.0003012544215574921,
 'WH': 0.01615187167889015,
 'ZH': 0.0032303743357780298,
 'QS': 0.0003769031796726919,
 'KP': 0.021852532271439615,
 'LK': 7.180093892197626e-05,
 'QL': 0.00032979028221360546,
 'HG': 0.00045828840057750595,
 'QD': 0.0003140859830605766,
 'KH': 0.01852714692578576,
 'YU': 0.0012894351340290455,
 'ZY': 0.002406945583520885,
 'FB': 0.0003138756576254913,
 'WY': 0.011718024551351678,
 'YH': 0.0012215701269748852,
 'TK': 4.6057968776369174e-05,
 'KY': 0.01615187167889015,
 'UK': 5.063282657959295e-05,
 'GV': 0.00030364343362376876,
 'BV': 0.00029384848415203426,
 'KK': 0.014251651481373662,
 'QE': 0.00023556448729543245,
 'GJ': 0.0002840535346802998,
 'KJ': 0.01377659643199454,
 'QJ': 0.00022771233771891802,
 'YZ': 0.000950110098758244,
 'BF': 0.00026446363573683085,
 'QF': 0.0002120080385658892,
 'WL': 0.008550990888824198,
 'FG': 0.00022056127292602093,
 'HW': 0.00029062191256134525,
 'GB': 0.0002448737367933619,
 'KF': 0.01187637623447805,
 'WR': 0.007917584156318703,
 'KC': 0.010451211086340685,
 'KW': 0.010451211086340685,
 'VM': 0.00012745379373586203,
 'XK': 0.0005098151749434481,
 'KQ': 0.009976156036961564,
 'TX': 2.7634781265821507e-05,
 'VS': 0.00012166043947514104,
 'WJ': 0.00665077069130771,
 'JV': 0.000422271155003664,
 'KG': 0.009501100987582441,
 'KM': 0.009501100987582441,
 'LW': 3.3395785545105236e-05,
 'WK': 0.006334067325054961,
 'XZ': 0.0004634683408576801,
 'JH': 0.0004011575972534808,
 'KU': 0.009026045938203319,
 'WT': 0.006017363958802213,
 'CW': 5.4292005643328234e-05,
 'YW': 0.0006107850634874426,
 'HH': 0.0001900220197516488,
 'KN': 0.008075935839445075,
 'KT': 0.008075935839445075,
 'LX': 2.8386417713339452e-05,
 'WC': 0.0053839572262967175,
 'QG': 0.00012563439322423064,
 'BK': 0.00014692424207601713,
 'JS': 0.000316703366252748,
 'MZ': 4.965732223475144e-05,
 'VD': 8.110695965009403e-05,
 'GW': 0.00012733434313254817,
 'QR': 0.0001020779444946874,
 'VP': 7.531360538937302e-05,
 'WD': 0.004117143761285725,
 'WQ': 0.004117143761285725,
 'YX': 0.00044112254585204185,
 'JL': 0.0002533626930021984,
 'ZW': 0.0007600880790065953,
 'WP': 0.003483737028780229,
 'QQ': 7.852149576514415e-05,
 'QV': 7.852149576514415e-05,
 'WM': 0.0031670336625274804,
 'GZ': 8.815454524561028e-05,
 'KB': 0.004275495444412098,
 'QB': 7.066934618862973e-05,
 'VF': 5.214018834648901e-05,
 'WV': 0.0028503302962747325,
 'WW': 0.0028503302962747325,
 'PZ': 2.714600282166412e-05,
 'VQ': 4.634683408576801e-05,
 'BG': 6.856464630214132e-05,
 'HK': 7.824436107420834e-05,
 'KV': 0.003325385345653854,
 'QI': 5.4965047035600905e-05,
 'WB': 0.0022169235637692366,
 'WG': 0.0022169235637692366,
 'WU': 0.0022169235637692366,
 'XW': 0.00016221391930018806,
 'JC': 0.0001266813465010992,
 'JT': 0.0001266813465010992,
 'RX': 8.585332217694977e-06,
 'VC': 3.476012556432601e-05,
 'WF': 0.0019002201975164886,
 'YK': 0.00020359502116248086,
 'CZ': 1.5081112678702288e-05,
 'JD': 0.000105567788750916,
 'JN': 0.000105567788750916,
 'JP': 0.000105567788750916,
 'MX': 1.6552440744917146e-05,
 'QN': 3.9260747882572075e-05,
 'FY': 3.3932503527080145e-05,
 'JK': 8.44542310007328e-05,
 'JM': 8.44542310007328e-05,
 'PK': 1.357300141083206e-05,
 'BZ': 2.9384848415203426e-05,
 'DZ': 7.641636183042178e-06,
 'FW': 2.5449377645310107e-05,
 'HZ': 3.353329760323214e-05,
 'IW': 3.899220651538622e-06,
 'JR': 6.33406732505496e-05,
 'MK': 9.931464446950288e-06,
 'QK': 2.3556448729543245e-05,
 'VN': 1.7380062782163006e-05,
 'YY': 0.00010179751058124043,
 'DK': 5.094424122028119e-06,
 'DX': 5.094424122028119e-06,
 'JF': 4.22271155003664e-05,
 'QT': 1.570429915302883e-05,
 'VG': 1.1586708521442002e-05,
 'VV': 1.1586708521442002e-05,
 'FK': 8.483125881770036e-06,
 'FX': 8.483125881770036e-06,
 'FZ': 8.483125881770036e-06,
 'GK': 9.794949471734475e-06,
 'JB': 2.11135577501832e-05,
 'JJ': 2.11135577501832e-05,
 'KZ': 0.00047505504937912205,
 'VH': 5.793354260721001e-06,
 'JG': 0, 'BW': 0, 'JX' : 0, 'QW' : 0, 'JQ' : 0, 'QY' : 0, 'VK':0, 'WX':0,
 'WZ':0, 'VZ':0, 'JZ':0, 'JW' : 0, 'GX':0, 'ZK':0, 'QX':0,'VJ':0,'ZX':0, 'VW':0,
 'PX':0, 'HX':0, 'PW':0, 'VB':0, 'BX':0, 'VX':0, 'KX':0,'CX':0, 'QZ':0}

Texte = str(input("Quel est le texte à déchiffrer ? (en lettres majuscules) \n"))
Texteind = [0]*(len(Texte))
for i2 in range (0, len(Texte), 1):# transforme les lettres du texte en indice en utilisant la fonction donnée
        if Texte[i2] != ' ' :
            Texteind[i2] = convertir_lettre_en_indice(Texte[i2])
        else:
            Texteind[i2] = -1
Textedechiffre = ['a']*(len(Texte))
i = 0
qualite = 0
while i < len(Texte)-1: #calcule la qualité du texte initial
    if Texte[i] != ' ' and Texte[i+1] != ' ' :
        q = proba_paire(Texte[i], Texte[i+1])
        if q != 0:
            qualite = qualite + log(q)
        else:
            qualite = qualite + log(0.000000001)
    i = i+1
Nbiter = int(input("Combien d'itérations devra exécuter l'algorithme ? (plus ce nombre est grand, plus la probabilité d'avoir un texte cohérent est élevé)\n"))
for ite in range (1, Nbiter+1, 1): #répète la boucle principale le nombre de fois demandé
    L1 = int(random()*26)
    while (L1 == 26):
        L1 = int(random()*26) #donne position de la première lettre à échanger
    L2 = int(random()*26)
    while ((L2 == 26) and (L2 == L1)):
        L2 = int(random()*26) #donne position de la deuxième lettre à échanger
    for i2 in range (0,26,1):
        alphabet2[i2]=alphabet[i2]
    alphabet2[L2]=alphabet[L1]
    alphabet2[L1]=alphabet[L2] # échange les lettres et on crée le deuxieme alphabet
    for i2 in range (0, len(Texte), 1):#Déchiffre le texte avec le nouvel alphabet
        if Texte[i2] != ' ' :
            Textedechiffre[i2] = alphabet2[Texteind[i2]]
        else:
            Textedechiffre[i2] = Texte[i2]
    i2 = 0
    qualite2 = 0
    while i2 < len(Texte)-1: #Calcule la qualité du nouveau texte
        if ((Texte[i2] != ' ') and (Texte[i2+1] != ' ')) :
            q = proba_paire(Textedechiffre[i2], Textedechiffre[i2+1])
            if (q != 0):
                qualite2 = qualite2 + log(q)
            else:
                qualite2 = qualite2 + log(0.000000001)
        i2 = i2+1
    if qualite2 > qualite: #Si la qualité trouvée est supérieure à la meilleure qualité trouvée jusque là
        qualite = qualite2 #Cette qualité devient la meilleure qualité
        for i2 in range (0,26,1):
            alphabetmax[i2]=alphabet2[i2]
        alphabet[L1] = alphabet2[L1]
        alphabet[L2] = alphabet2[L2]#L'alphabet devient le meilleur alphabet        
        numiter = ite #on repère à quel itération on a trouvé cet alphabet (non nécessaire)
    else:
        r = random()
        if r < exp(qualite2-qualite):
            alphabet[L1] = alphabet2[L1]
            alphabet[L2] = alphabet2[L2]
#alphabetmax = list("KQJAWGRCBUZINXDYOMHSELPVFT");
#Cet alphabet est l'alphabet déduit avec plusieurs tentatives et de de la réflexion,
#seulement à titre de comparaison
for i in range (0, len(Texte), 1): #on déchiffre le texte avec le meilleur alphabet trouvé
        if Texte[i] != ' ' :
            Textedechiffre[i] = alphabetmax[Texteind[i]]
        else:
            Textedechiffre[i] = Texte[i] 
StrTextedechiffre = "".join(Textedechiffre) #Permet de transformer la liste de caractères en chaine de caractères
print(StrTextedechiffre) #affiche le texte déchiffré obtenu

